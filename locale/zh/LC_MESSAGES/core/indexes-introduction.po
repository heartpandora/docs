# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-09-25 21:00+0800\n"
"Last-Translator: yexingzhe <ispe54@gmail.com>\n"
"Language-Team: Chinese (http://www.transifex.com/projects/p/mongodb-manual/language/zh/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh\n"
"Plural-Forms: nplurals=1; plural=0;\n"

# ac639ab13ca64771b095c9d6e0ef2ff6
#: ../source/core/indexes-introduction.txt:6
msgid "Index Introduction"
msgstr "索引介绍"

# 4c66f78d55074a6ca2a0fe7fe21f1f48
#: ../source/core/indexes-introduction.txt:18
msgid "Indexes are special data structures [#b-tree]_ that store a small portion of the collection's data set in an easy to traverse form. The index stores the value of a specific field or set of fields, ordered by the value of the field."
msgstr "索引是一种特殊的数据结构 [#b-tree]_ ,它以一种易于遍历的格式保存了集合中数据集的小部分.一个索引会保存被索引的键或多个键的值,并按照值进行排序。"

# 9d2c7aae83084d7b877726cb8ce1dc6b
#: ../source/core/indexes-introduction.txt:23
msgid "Fundamentally, indexes in MongoDB are similar to indexes in other database systems. MongoDB defines indexes at the :term:`collection` level and supports indexes on any field or sub-field of the documents in a MongoDB collection."
msgstr "根本上来说，MongoDB中的索引和其它数据库系统中的索引是相似的。MongoDB在 :term:`集合` 级别建立索引, 并支持对集合中文档的任意键或内嵌文档的键建立索引."

# 9c43246ede7d4457bc48fff97dc12571
#: ../source/core/indexes-introduction.txt:28
msgid "If an appropriate index exists for a query, MongoDB can use the index to limit the number of documents it must inspect. In some cases, MongoDB can use the data from the index to determine which documents match a query. The following diagram illustrates a query that selects documents using an index."
msgstr "如果存在某个索引适用于当前查询,MongoDB可以使用该索引来减少查询过程中扫描的文档数。在某些情况下，MongoDB由索引中存储的数据就可以直接决定一篇文档是否和查询匹配。下图演示了一个查询使用索引来查找文档。"

# 201b7d9f6a7642328e286d1d736f820c
#: ../source/core/indexes-introduction.txt:45
msgid "Consider the documentation of the :ref:`query optimizer <read-operations-query-optimization>` for more information on the relationship between queries and indexes."
msgstr "点击阅读 :ref:`查询优化 <read-operations-query-optimization>` 了解更多关于查询和索引间的关系。"

# 877a741e8b824266a2382fe2f763ca11
#: ../source/core/indexes-introduction.txt:55
msgid "Indexes can also optimize the performance of other operations in specific situations:"
msgstr "索引同时也能在特殊场合下提升其他操作的性能:"

# 59b2b7b97aa0476abedf0316a43234d9
#: ../source/core/indexes-introduction.txt:61
msgid "MongoDB can use indexes to return documents sorted by the index key directly from the index without requiring an additional sort phase."
msgstr "有了索引，MongoDB可以从索引中直接返回已经按照被索引键排序的文档，而不需要附加额外的一个排序阶段。"

# 00a58620abd146c6b12df8ffa8d109db
#: ../source/core/indexes-introduction.txt:36
msgid "MongoDB indexes use a B-tree data structure."
msgstr "MongoDB中的索引使用B-tree数据结构来存储。"

# be07451f048e4f6b9635942796e074bf
#: ../source/core/indexes-introduction.txt:77
msgid "Index Types"
msgstr "索引类型。"

# 4f6d120227064f849174e4a42bdf2600
#: ../source/core/indexes-introduction.txt:83
msgid "Default ``_id``"
msgstr "默认 ``_id``"

# edd0cc34d77246c8a2b71c4ba8a6801a
#: ../source/core/indexes-introduction.txt:85
msgid "All MongoDB collections have an index on the ``_id`` field that exists by default. If applications do not specify a value for ``_id`` the driver or the :program:`mongod` will create an ``_id`` field with an :term:`ObjectId` value."
msgstr "MongoDB中所有的集合都会对默认存在的 ``_id`` 建立索引。如果应用在存储的时候没有指定 ``_id`` 值，那么数据库驱动或者 :program:`mongod` 将会自动创建一个 :term:`ObjectId` 值作为 ``_id``。"

# 10369decfefa44d6accab56ffb9ff1ca
#: ../source/core/indexes-introduction.txt:90
msgid "The ``_id`` index is *unique*, and prevents clients from inserting two documents with the same value for the ``_id`` field."
msgstr " ``_id`` 索引是 *唯一* 的，可以避免客户端插入两条具有相同 ``_id`` 值的文档。"

# cc0055ece9ba412eb539a980ccfa3af5
#: ../source/core/indexes-introduction.txt:94
msgid "Single Field"
msgstr "单键索引"

# b74aa9d684c34b2f9e29d651d45db336
#: ../source/core/indexes-introduction.txt:96
msgid "In addition to the MongoDB-defined ``_id`` index, MongoDB supports user-defined indexes on a :doc:`single field of a document </core/index-single>`. Consider the following illustration of a single-field index:"
msgstr "除了MongoDB预订义的 ``_id`` 索引外，MongoDB还支持用户对单键建立自定义索引，详见 :doc:`文档的单键索引 </core/index-single>` 。以下是单键索引的示例："

# 68d17345dc5941c2a6d1e7fdecb70f84
#: ../source/core/indexes-introduction.txt:104
msgid "Compound Index"
msgstr "复合索引"

# 48d68cb11a664862bbe6571b10907c9e
#: ../source/core/indexes-introduction.txt:106
msgid "MongoDB *also* supports user-defined indexes on multiple fields. These :doc:`compound indexes </core/index-compound>` behave like single-field indexes; *however*, the query can select documents based on additional fields. The order of fields listed in a compound index has significance. For instance, if a compound index consists of ``{ userid: 1, score: -1 }``, the index sorts first by ``userid`` and then, within each ``userid`` value, sort by ``score``. Consider the following illustration of this compound index:"
msgstr "MongoDB *也* 支持用户对多个键建立自定义索引。这些 :doc:`复合索引 </core/index-compound>` 就像单键索引一样；*不同的是* ，查询可以基于多个键来选择文档。在复合索引中的键的顺序很重要。比如说，如果一个复合索引是这样： ``{ userid: 1, score: -1 }`` ，那么索引首先会基于 ``userid`` 的值对文档排序，然后对于相同 ``userid`` 的文档，再按照 ``score`` 排序。以下是复合索引的示例："

# b86a86888ff44e99b1714aa0e0baf342
#: ../source/core/indexes-introduction.txt:118
msgid "Multikey Index"
msgstr "多键索引"

# 0e8f56eb539843cea7f2f3ffe83e2c30
#: ../source/core/indexes-introduction.txt:120
msgid "MongoDB uses :doc:`multikey indexes </core/index-multikey>` to index the content stored in arrays. If you index a field that holds an array value, MongoDB creates separate index entries for *every* element of the array. These :doc:`multikey indexes </core/index-multikey>` allow queries to select documents that contain arrays by matching on element or elements of the arrays. MongoDB automatically determines whether to create a multikey index if the indexed field contains an array value; you do not need to explicitly specify the multikey type."
msgstr "MongoDB使用 :doc:`多键索引 </core/index-multikey>` 来索引数组中的内容。如果您基于一个指向数组的键创建索引，那么MongoDB将会对数组中 *每个* 元素分别建立一条索引项。 :doc:`多键索引 </core/index-multikey>` 可以让查询通过匹配数组中元素内容的方式来选择文档。如果一个被索引键的值是一个数组，MongoDB可以自动的创建多键索引，不需要显式的指定。"

# 1e0d5650830d498e9bc4e3492a15af54
#: ../source/core/indexes-introduction.txt:129
msgid "Consider the following illustration of a multikey index:"
msgstr "以下是多键索引的示例："

# 82acbc090479468d989c02ca4f441369
#: ../source/core/indexes-introduction.txt:134
msgid "Geospatial Index"
msgstr "地理空间索引"

# 8a57f261ba744ae5beef8ca1cd9c5e54
#: ../source/core/indexes-introduction.txt:136
msgid "To support efficient queries of geospatial coordinate data, MongoDB provides two special indexes: :doc:`2d indexes </core/2d>` that uses planar geometry when returning results and :doc:`2sphere indexes </core/2dsphere>` that use spherical geometry to return results."
msgstr "为了高效地查询地理坐标数据，MongoDB提供了两种特殊的索引： :doc:`二维索引 </core/2d>` (使用平面几何返回结果) 和 :doc:`二维球面索引</core/2dsphere>` (使用球面几何返回结果)。"

# ba0672c6d6ef4518bcb6b0df2159619f
#: ../source/core/indexes-introduction.txt:141
msgid "See :doc:`/core/geospatial-indexes` for a high level introduction to geospatial indexes."
msgstr "点击阅读 :doc:`/core/geospatial-indexes` 更深入了解地理空间索引。"

# abe216e16e5e4464be96b6f187d7e0e1
#: ../source/core/indexes-introduction.txt:145
msgid "Text Indexes"
msgstr "文本索引"

# e17cfe158c6d4cca994226bbc6a72f77
#: ../source/core/indexes-introduction.txt:152
msgid "See :doc:`/core/index-text` for more information on text indexes and search."
msgstr "阅读 :doc:`/core/index-text` 了解更多关于文本索引与文本搜索。"

# b14ff7343fb1457eaafdfd17a3ce0b7c
#: ../source/core/indexes-introduction.txt:156
msgid "Hashed Indexes"
msgstr "哈希索引"

# 757fbf8eec414dcb8d07832bf7913f39
#: ../source/core/indexes-introduction.txt:158
msgid "To support :ref:`hash based sharding <sharding-hashed-sharding>`, MongoDB provides a :doc:`hashed index </core/index-hashed>` type, which indexes the hash of the value of a field. These indexes have a more random distribution of values along their range, but *only* support equality matches and cannot support range-based queries."
msgstr "为了支持 :ref:`哈希分片 <sharding-hashed-sharding>` , MongoDB提供 :doc:`哈希索引 </core/index-hashed>` ，对被索引键的值的哈希值进行索引。 在值域范围里，哈希索引有更随机的值分布，但是 *只* 支持等值匹配并且不支持基于范围的查询。"

# 01ddf5dac3254babbffa8d73f7869f6e
#: ../source/core/indexes-introduction.txt:165
msgid "Index Properties"
msgstr "索引属性"

# 8122c6e7c3fb45d2b9606785ad5e5948
#: ../source/core/indexes-introduction.txt:168
msgid "Unique Indexes"
msgstr "唯一索引"

# b33c63138fb6480e85b5cd91e78d60ca
#: ../source/core/indexes-introduction.txt:170
msgid "The :doc:`unique </core/index-unique>` property for an index causes MongoDB to reject duplicate values for the indexed field.  To create a :doc:`unique index </core/index-unique>` on a field that already has duplicate values, see :ref:`index-creation-duplicate-dropping` for index creation options. Other than the unique constraint, unique indexes are functionally interchangeable with other MongoDB indexes."
msgstr "索引的 :doc:`唯一 </core/index-unique>` 属性可以让MongoDB避免被索引键的重复值。如果想基于已经有重复值的键创建 :doc:`唯一索引 </core/index-unique>` ，阅读 :ref:`index-creation-duplicate-dropping` 了解更多创建选项细节。除了唯一性的限制以外，唯一索引和其他普通索引功能上一致。"

# 4a5c5735abf64df7a8affe590fd6e8ad
#: ../source/core/indexes-introduction.txt:179
msgid "Sparse Indexes"
msgstr "稀疏索引"

# 3ced17c79f9142e28bd5d8f056d89f38
#: ../source/core/indexes-introduction.txt:181
msgid "The :doc:`sparse </core/index-sparse>` property of an index ensures that the index only contain entries for documents that have the indexed field. The index skips documents that *do not* have the indexed field."
msgstr "索引的 :doc:`稀疏 </core/index-sparse>` 属性可以确保该索引只索引那些包含了被索引键的文档。索引会跳过那些 *没有* 被索引键的文档。"

# e3dcea2a760749379d57f3d7a2c2a2ec
#: ../source/core/indexes-introduction.txt:185
msgid "You can combine the sparse index option with the unique index option to reject documents that have duplicate values for a field but ignore documents that do not have the indexed key."
msgstr "索引的唯一性和稀疏性可以结合在一起，来确保文档中被索引键不会包含重复值而且忽略那些不包含被索引键的文档。"

# 09a1299839ef4aec836fac89ba2305ce
#: ../source/core/indexes-introduction.txt:190
msgid "Index Intersection"
msgstr "索引交集"

# 3c462a96593641bfb8eb4806018f4555
#: ../source/core/indexes-introduction.txt:194
msgid "MongoDB can use the :doc:`intersection of indexes </core/index-intersection>` to fulfill queries. For queries that specify compound query conditions, if one index can fulfill a part of a query condition, and another index can fulfill another part of the query condition, then MongoDB can use the intersection of the two indexes to fulfill the query. Whether the use of a compound index or the use of an index intersection is more efficient depends on the particular query and the system."
msgstr "MongoDB可以使用 :doc:`索引交集 </core/index-intersection>` 来匹配查询。 对于那些复合条件查询，如果有一个索引可以匹配其中一部分条件，另一个索引可以匹配其它部分条件， MongoDB 会使用两索引的交集来匹配整个查询。使用复合索引还是使用索引交集，哪个更高效取决与特定的查询和数据系统。"

# 47a473d5005b443f8b9088979ad85921
#: ../source/core/indexes-introduction.txt:203
msgid "For details on index intersection, see :doc:`/core/index-intersection`."
msgstr "关于索引交集的细节，点击 :doc:`/core/index-intersection` 。"

# a6d72ee5c8824863b1bfaa1ce79e461f
#: ../source/core/indexes-introduction.txt:1
msgid "index"
msgstr "索引"

# a6d72ee5c8824863b1bfaa1ce79e461f
#: ../source/core/indexes-introduction.txt:1
msgid "overview"
msgstr "概述"

#: ../source/core/indexes-introduction.txt:12
msgid "Indexes support the efficient execution of queries in MongoDB. Without indexes, MongoDB must scan every document in a collection to select those documents that match the query statement. These *collection scans* are inefficient because they require :program:`mongod` to process a larger volume of data than an index for each operation."
msgstr "索引可以让 MongoDB中的查询执行更加高效。如果没有索引，MongoDB必须扫描集合中每一篇文档来选择符合查询条件的文档。这种 *集合扫描* 是低效的因为相比于对每步操作使用索引而言，全集扫描使得 :program:`mongod` 要处理更多的数据量。"

#: ../source/core/indexes-introduction.txt:41
msgid "Optimization"
msgstr "优化"

#: ../source/core/indexes-introduction.txt:49
msgid "Create indexes to support common and user-facing queries. Having these indexes will ensure that MongoDB only scans the smallest possible number of documents."
msgstr "创建索引来支持普通且面向用户的查询。这些索引将会确保MongoDB尽可能扫描最少量的文档。"

#: ../source/core/indexes-introduction.txt:59
msgid "Sorted Results"
msgstr "结果排序"

#: ../source/core/indexes-introduction.txt:67
msgid "Covered Results"
msgstr "覆盖结果"

#: ../source/core/indexes-introduction.txt:69
msgid "When the query criteria and the :term:`projection` of a query include *only* the indexed fields, MongoDB will return results directly from the index *without* scanning any documents or bringing documents into memory. These covered queries can be *very* efficient."
msgstr "当一个查询的条件和 :term:`映射` 只包含被索引键, MongoDB 将会直接从索引返回结果 *不需要* 扫描任何文档或者将文档载入内存。这些被覆盖的查询是 *非常的* 高效的。"

#: ../source/core/indexes-introduction.txt:79
msgid "MongoDB provides a number of different index types to support specific types of data and queries."
msgstr "MongoDB提供了一些不同类型的索引来支持特定类型的数据和查询。"

#: ../source/core/indexes-introduction.txt:147
msgid "MongoDB provides a ``text`` index type that supports searching for string content in a collection. These text indexes do not store language-specific *stop* words (e.g. \"the\", \"a\", \"or\") and *stem* the words in a collection to only store root words."
msgstr "MongoDB提供了 ``文本`` 索引类型支持在集合中的文本搜索。这些文本索引不会存储相关语言中的 *停止词* (比如 \"the\", \"a\", \"or\")，并对集合中的词作 *剥离词干* 处理，这样就可以只存储词根。"

#~ msgid ""
#~ "Indexes support the efficient execution of queries in MongoDB. Without "
#~ "indexes MongoDB must scan every document in a collection to select those "
#~ "documents that match the query statement. These *collection scans* are "
#~ "inefficient because they require :program:`mongod` to process a larger "
#~ "volume of data than an index for each operation."
#~ msgstr ""

#~ msgid "Tip"
#~ msgstr ""

#~ msgid "**Sorted Results**"
#~ msgstr ""

#~ msgid "**Covered Results**"
#~ msgstr ""

#~ msgid ""
#~ "When the query criteria and the :term:`projection` of a query include *only*"
#~ " the indexed fields, MongoDB will return results directly from the index "
#~ "*without* scanning any documents or bringing documents into memory. These "
#~ "covered queries can be *very* efficient. Indexes can also cover "
#~ ":doc:`aggregation pipeline operations </core/aggregation-pipeline>`."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB provides an umber of different index types to support specific types"
#~ " of data and queries."
#~ msgstr ""

#~ msgid ""
#~ "MongoDB provides a *beta* ``text`` index type that supports searching for "
#~ "string content in a collection. These text indexes do not store language-"
#~ "specific *stop* words (e.g. \"the\", \"a\", \"or\") and *stem* the words in "
#~ "a collection to only store root words."
#~ msgstr ""
